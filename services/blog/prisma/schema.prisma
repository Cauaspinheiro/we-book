// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // not default because the id must match with auth service
  id String @id

  email String @unique
  name  String

  createdAt DateTime

  publications  Post[]
  contributions PostContributor[]
  views         PostView[]

  @@map("users")
}

model Post {
  // not default because the id must match with editorial-room service
  id String @id

  content     String @db.Text
  title       String
  description String
  urlPath     String @unique

  hasDraft Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  publisherId String

  publisher    User              @relation(fields: [publisherId], references: [id])
  contributors PostContributor[]
  viewers      PostView[]

  @@map("posts")
}

model PostContributor {
  id String @id @default(uuid())

  contributorId String
  postId        String

  contributor User @relation(fields: [contributorId], references: [id])
  post        Post @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("post_contributor")
}

model PostView {
  id String @id @default(uuid())

  viewerId String
  postId   String

  viewer User @relation(fields: [viewerId], references: [id])
  post   Post @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("post_view")
}
